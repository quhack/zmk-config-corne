/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Layers
#define QWERTY 0
#define NUM 1
#define SYMB 2
#define ADJUST 3

// Behavior Overrides
&lt {
    tapping-term-ms = <200>;
    flavor = "hold-preferred";
};

behaviors {

  td_multi_windows: tap_dance_multi_windows {
    compatible = "zmk,behavior-tap-dance";
    label = "TAP_DANCE_MULTI_WINDOWS";
    #binding-cells = <0>;
    tapping-term-ms = <200>;
    bindings = <&kp ESC>, <&kp LGUI>;
  };

  bm: bottom_row_mods {
    compatible = "zmk,behavior-hold-tap";
    label = "BOTTOM_ROW_MODS";
    #binding-cells = <2>;
    tapping-term-ms = <135>;
    quick-tap-ms = <0>;
    flavor = "tap-preferred";
    bindings = <&kp>, <&kp>;
  };

  cm: code_row_mods {
    compatible = "zmk,behavior-hold-tap";
    label = "CODE_ROW_MODS";
    #binding-cells = <2>;
    tapping-term-ms = <200>;
    quick-tap-ms = <0>;
    flavor = "tap-preferred";
    bindings = <&kp>, <&kp>;
    retro-tap;
  };

  sm: space_mod {
    compatible = "zmk,behavior-hold-tap";
    label = "SPACE_MOD";
    #binding-cells = <2>;
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <125>;
    bindings = <&kp>, <&kp>;
  };
};


/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <NUM SYMB>;
            then-layer = <ADJUST>;
        };
    };
        keymap {
                compatible = "zmk,keymap";

                qwerty {
// -----------------------------------------------------------------------------------------
// | - |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | - |
// | - |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | - |
// | - |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | - |
//                    | ALT | CTRL | SPC |   | TAB | ENTR |wintap|
                        bindings = <
   &none &kp Q       &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P          &none
   &none &kp A       &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI       &none
   &none &bm LSHFT Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &bm RSHFT FSLH &none
        &kp LALT &kp LCTRL &lt NUM SPACE           &lt SYMBOL TAB &kp ENTER &td_multi_windows
                        >;
                };

                numbers {
// -----------------------------------------------------------------------------------------
// | - |xxxxxx|xxxxxx|xxxxxx|xxxxxx|xxxxxx|   |xxxxxx|  7  |  8  |  9  |  0  | - |
// | - |xxxxxx|xxxxxx|xxxxxx|xxxxxx|xxxxxx|   |xxxxxx|  4  |  5  |  6  |  /  | - |
// | - |xxxxxx|^^^^^^|xxxxxx|xxxxxx|xxxxxx|   |xxxxxx|  1  |  2  |  3  |  .  | - |
//                   |xxxxxx|xxxxxx| ^^^^ |   | ^^^^ |xxxxxx|xxxxxx|
                        bindings = <
   &none &none &none &none &none &none   &none &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp KP_N0 &none
   &none &none &none &none &none &none   &none &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp KP_SLASH &none
   &none &trans &none &none &none &none   &none &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp KP_DOT &none
                  &none  &none  &trans      &trans  &none   &none
                        >;
                };

                symbols {
// -----------------------------------------------------------------------------------------
// | - |  !  |  "  |  Â£  |  $  |  %  |   |  ^  |  &  |  *  |  -  |  =  | - |
// | - |     |  |  |  {  |  [  |  (  |   |  )  |  ]  |  }  |  \  |  #  | - |
// | - |  ~  |  `  |xxxxx|xxxxx|xxxxxx|   |xxxxx|xxxxx|  _  |  +  |xxxxx| - |
//                    |xxxxx|xxxxx|^^^^^|   |^^^^^|xxxxx|xxxxx|
                        bindings = <
   &none  &kp EXCL &kp DQT &kp LS(3) &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp MINUS &kp EQUAL &none
   &none &none  &kp PIPE &kp LBRC   &kp LBKT   &kp LPAR      &kp RPAR &kp RBKT &kp RBRC &kp NUBS &kp NUHS &none
   &none &kp TILDE &kp GRAVE &none   &none   &none      &none &none  &kp UNDERSCORE &kp PLUS &none &none
                             &none &none   &trans   &trans   &none    &none
                        >;
                };
                adjusts {
// -----------------------------------------------------------------------------------------
// | - | F12 | F7  | F8  | F9  |  *  |   |xxxxx|xxxxx|xxxxx|xxxxx|RESET| - |
// | - | F11 | F4  | F5  | F6  |VOL_U|   | LEFT| DOWN|  UP |RIGHT|xxxxx| - |
// | - | F10 | F1  | F2  | F3  |VOL_D|   |xxxxx|xxxxx|xxxxx|xxxxx|xxxxx| - |
//                    |xxxxx|xxxxx|^^^^^^|   |^^^^^|xxxxx|xxxxx|
                        bindings = <
   &none  &kp F12 &kp F7 &kp F8 &kp F9 &kp KP_ASTERISK   &none &none  &none &none &kp C_RESET &none
   &none  &kp F11 &kp F4 &kp F5 &kp F6 &kp C_VOL_UP      &kp LEFT &kp DOWN &kp UP &kp RIGHT &none &none
   &none  &kp F10 &kp F1 &kp F2 &kp F3 &kp C_VOL_DN     &none &none  &none &none &none &none
                             &none &none   &trans   &trans   &none    &none
                        >;
                };


//                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
//                        bindings = <
//   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
//   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
//   &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
//                                    &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
//                        >;
//                };

//                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
//                        bindings = <
//   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
//   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
//   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
//                             &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
//                        >;
//                };
//        };
};
